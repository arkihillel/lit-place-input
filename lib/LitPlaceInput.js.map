{"version":3,"file":"LitPlaceInput.js","sourceRoot":"","sources":["../src/LitPlaceInput.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,uDAAuD,CAAC;AAC/D,OAAO,qCAAqC,CAAC;AAG7C,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,SAAS;IAoL1C;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG;YACZ,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;SACP,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,iCAAiC,CAAC;QAC3D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IACtB,CAAC;IAjMD,MAAM,KAAK,UAAU;QACnB,OAAO;YACL;;eAEG;YACH,MAAM,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;aACb;YACD;;eAEG;YACH,SAAS,EAAE;gBACT,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;aACf;YACD;;;;eAIG;YACH,SAAS,EAAE;gBACT,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD;;;eAGG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD,eAAe;YACf,SAAS,EAAE;gBACT,IAAI,EAAE,MAAM;aACb;YACD;;eAEG;YACH,iBAAiB,EAAE;gBACjB,IAAI,EAAE,MAAM;aACb;YACD;;;;;;;;;;eAUG;YACH,YAAY,EAAE;gBACZ,IAAI,EAAE,MAAM;aACb;YAED;;;;;;;;eAQG;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,MAAM;aACb;YACD;;eAEG;YACH,OAAO,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,KAAK;aACb;YACD;;eAEG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD;;eAEG;YACH,MAAM,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;aACf;YACD;;;;;;;;;;;;;;;;;;;eAmBG;YACH,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;aACf;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;aACf;YACD,eAAe;YACf,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;aACb;YAED;;;;;;;;eAQG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,EAAE;aACV;YACD;;;;;;;;;;eAUG;YACH,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD;;;;;;;;eAQG;YACH,WAAW,EAAE;gBACX,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;aACb;YACD,eAAe;YACf,MAAM,EAAE;gBACN,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,IAAI;aACb;SACF,CAAC;IACJ,CAAC;IAkBD,OAAO,CAAC,iBAAiB;QACvB,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACjC,iBAAiB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;YAC/C,QAAQ,QAAQ,EAAE;gBAChB,KAAK,QAAQ;oBACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,MAAM;gBACR,KAAK,aAAa;oBAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;oBAC/C,MAAM;gBACR,KAAK,mBAAmB,CAAC;gBACzB,KAAK,cAAc,CAAC;gBACpB,KAAK,oBAAoB,CAAC;gBAC1B,KAAK,YAAY,CAAC;gBAClB,KAAK,WAAW;oBACd,IAAI,CAAC,kBAAkB,CACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,UAAU,CAChB,CAAC;oBACF,MAAM;gBACR;oBACE,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,KAAK,CAAC,YAAY,EAAE,CAAC;QACrB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACxD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACxB,KAAK,CAAC,EAAE,GAAG,WAAW,CAAC;QACvB,KAAK,CAAC,gBAAgB,CACpB,UAAU,EACV,CAAC,GAAG,EAAE;YACJ,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,2BAA2B;QAC7B,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACd,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAChD,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,EAC5C,EAAE,CACH,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,YAAY,EAAE;gBAC5B,MAAM,EAAE;oBACN,IAAI,EAAE,qBAAqB;iBAC5B;aACF,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IAEH,kBAAkB;QAChB,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAC7D,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IACE,YAAY;gBACZ,2BAA2B;gBAC3B,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;gBACnC,2BAA2B;gBAC3B,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;gBACnC,2BAA2B;gBAC3B,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC;gBACpC,2BAA2B;gBAC3B,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,EACpC;gBACA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;aAC1B;YACD,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvD,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC;oBACpC,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE;iBACtC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,CAAC;aACzC;YACD,IACE,UAAU;gBACV,CAAC,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EACrF;gBACA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC3B;SACF;IACH,CAAC;IAED,aAAa,CAAC,QAAQ,EAAE,QAAQ;QAC9B,4FAA4F;QAC5F,qEAAqE;QACrE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACvF,oEAAoE;YACpE,IAAI,CAAC,QAAQ;gBACX,CAAC,QAAQ;oBACT,CAAC,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;oBAC3B,CAAC,CAAC,IAAI,CAAC,QAAQ;oBACf,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;aAClD;SACF;IACH,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,sEAAsE;QAEtE,oEAAoE;QACpE,kEAAkE;QAClE,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjF,IAAI,CAAC,WAAW,GAAG;gBACjB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE;oBACN,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;oBAC1B,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;iBAC3B;aACF,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,OAAO;SACR;QACD,oCAAoC;QACpC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG;gBACjB,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE;oBACN,GAAG,EAAE,CAAC;oBACN,GAAG,EAAE,CAAC;iBACP;aACF,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YACD,OAAO;SACR;QACD,oEAAoE;QACpE,wEAAwE;QACxE,sEAAsE;QACtE,IACE,QAAQ;YACR,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW,CAAC,MAAM;YACvB,QAAQ,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,EACpC;YACA,0CAA0C;YAC1C,OAAO;SACR;QACD,2DAA2D;QAC3D,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;YAC/D,IAAI,CAAC,WAAW,GAAG;gBACjB,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE;oBACN,GAAG,EAAE,CAAC;oBACN,GAAG,EAAE,CAAC;iBACP;aACF,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YACD,OAAO;SACR;QACD,kCAAkC;QAClC,IAAI,CAAC,WAAW,GAAG;YACjB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE;gBACN,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,CAAC;aACP;SACF,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,OAAO,EAAE,OAAO;QACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,MAAM,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBAC/C,IAAI,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;wBACrE,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC3D,OAAO,CAAC,CAAC,CAAC,CAAC;qBACZ;yBAAM;wBACL,MAAM,CAAC,MAAM,CAAC,CAAC;qBAChB;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,MAAM,EAAE,OAAO;QAC5B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,MAAM,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;gBAC3B,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;iBACxB;gBACD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBAC/C,IAAI,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;wBACrE,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;wBACjD,OAAO,CAAC,CAAC,CAAC,CAAC;qBACZ;yBAAM;wBACL,MAAM,CAAC,MAAM,CAAC,CAAC;qBAChB;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,EAAE,CAAC,QAAQ,EAAE;YACf,MAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC;YACzF,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG;gBACZ,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;gBACjB,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;aAClB,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YACjE,IAAI,CAAC,WAAW,GAAG;gBACjB,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK;gBAC1D,GAAG,CAAC;aACL,CAAC;SACH;IACH,CAAC;IAED;;;;OAIG;IAEH,2BAA2B;IAC3B,iBAAiB,CAAC,EAAE,EAAE,UAAU;QAC9B,MAAM,CAAC,GAAG;YACR,QAAQ,EAAE,EAAE,CAAC,QAAQ;YACrB,iBAAiB,EAAE,EAAE,CAAC,iBAAiB;YACvC,MAAM,EAAE,UAAU,IAAI,EAAE,CAAC,iBAAiB;YAC1C,MAAM,EAAE;gBACN,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC/B,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;aAChC;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE;gBACnB,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,EAAE;gBACd,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,EAAE;gBACf,KAAK,EAAE,EAAE,CAAC,sBAAsB,IAAI,EAAE;aACvC;YACD,YAAY,EAAE;gBACZ,kBAAkB,EAAE,EAAE;gBACtB,IAAI,EAAE,EAAE,CAAC,IAAI;gBACb,0BAA0B,EAAE,EAAE,CAAC,0BAA0B,IAAI,EAAE;gBAC/D,kBAAkB,EAAE,EAAE,CAAC,kBAAkB,IAAI,KAAK;gBAClD,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3D,OAAO,EAAE,EAAE,CAAC,OAAO,IAAI,EAAE;gBACzB,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,EAAE;gBACjB,kBAAkB,EAAE,EAAE,CAAC,kBAAkB;aAC1C;SACF,CAAC;QACF,6BAA6B;QAC7B,MAAM,OAAO,GAAG;YACd,aAAa,EAAE,EAAE;YACjB,KAAK,EAAE,EAAE;SACV,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE;YACvD,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7F,QAAQ,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBACzC,KAAK,UAAU;oBACb,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBAClD,MAAM;gBACR,KAAK,6BAA6B;oBAChC,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACxD,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnD,MAAM;gBACR,KAAK,SAAS;oBACZ,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACrD,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC1D,MAAM;gBACR,KAAK,aAAa;oBAChB,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACxD,MAAM;gBACR,KAAK,eAAe;oBAClB,OAAO,CAAC,aAAa,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC5D,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;oBAC9D,CAAC,CAAC,KAAK,CAAC,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC;oBAC7C,MAAM;gBACR,KAAK,OAAO;oBACV,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnD,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;oBAC9D,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC9B,MAAM;gBACR;oBACE,OAAO,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;aACnF;SACF;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,QAAQ;QACf,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;YACpD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,GAAG;gBACZ,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG;gBACxB,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG;aACzB,CAAC;YACF,IAAI,CAAC,WAAW,GAAG;gBACjB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,MAAM,EAAE;oBACN,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG;oBACxB,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG;iBACzB;aACF,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;SAC/B;IACH,CAAC;CACF,CAAA;AA1jBY,aAAa;IADzB,aAAa,CAAC,iBAAiB,CAAC;GACpB,aAAa,CA0jBzB;SA1jBY,aAAa","sourcesContent":["import { customElement } from 'lit-element';\nimport { TextField } from '@material/mwc-textfield';\nimport '@google-web-components/google-apis/google-maps-api.js';\nimport '@material/mwc-icon/mwc-icon-font.js';\n\n@customElement('lib-input-place')\nexport class LitPlaceInput extends TextField {\n  static get properties() {\n    return {\n      /**\n       * Required: A Maps API key. To obtain an API key, see developers.google.com/maps/documentation/javascript/tutorial#api_key.\n       */\n      apiKey: {\n        type: String,\n        notify: true,\n      },\n      /**\n       * Indicates the Google API is loaded and that Autocomplete suggestions and geocoding functions are available\n       */\n      apiLoaded: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n      },\n      /**\n       * Whether to hide the error message\n       * If true, the control does not validate that the value is complete (lat/lng, search term, place_id)\n       * and has been chosen from the places drop down.\n       */\n      hideError: {\n        type: Boolean,\n        value: false,\n      },\n      /**\n       * Whether to hide the place icon\n       * If true, the control does not show the place icon in the input box.\n       */\n      hideIcon: {\n        type: Boolean,\n        value: false,\n      },\n      /** @private */\n      _geocoder: {\n        type: Object,\n      },\n      /**\n       * bias search results to a country code  (ISO 3166-1 Alpha-2 country code, case insensitive).\n       */\n      searchCountryCode: {\n        type: String,\n      },\n      /**\n       * bias search results to a bounding rectangle.\n       * object properties (all are required):\n       * {\n       *    east: number,  // East longitude in degrees.\n       *    west: number,  // West longitude in degrees.\n       *    north: number, // North latitude in degrees.\n       *    south: number, // South latitude in degrees.\n       * }\n       *\n       */\n      searchBounds: {\n        type: Object,\n      },\n\n      /**\n       * bias search results by type\n       * permitted values:\n       *   address\n       *   geocode\n       *   establishment\n       *   (regions)\n       *   (cities)\n       */\n      searchType: {\n        type: String,\n      },\n      /**\n       * True if the entered text is not valid - i.e. not a selected place and not previously geocoded\n       */\n      invalid: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        value: false,\n      },\n      /**\n       * Internal representation of invalid, True if the entered text is not valid - i.e. not a selected place and not previously geocoded\n       */\n      _invalid: {\n        type: Boolean,\n        value: false,\n      },\n      /**\n       * an object - { lat: number, lng: number } - representing the geolocation of the entered / selected place\n       */\n      latLng: {\n        type: Object,\n        notify: true,\n        readOnly: true,\n      },\n      /**\n       * An object containing the place selected or geocoded:\n       * ```\n       *   place_id\n       *   formatted_address\n       *   latLng { lat: lng: }\n       *   search\n       *   basic:\n       *     name\n       *     address\n       *     city\n       *     state\n       *     stateCode\n       *     postalCode\n       *     country\n       *     countryCode\n       *     phone\n       *   placeDetails: additional properties from the google place result\n       *```\n       */\n      place: {\n        type: Object,\n        notify: true,\n        readOnly: true,\n      },\n      _place: {\n        type: Object,\n        notify: true,\n        readOnly: true,\n      },\n      /** @private */\n      _places: {\n        type: Object,\n      },\n\n      /**\n       * Sets the desired language for the input and the autocomplete list.\n       * Normally, Google Places Autocomplete defaults to the browser default language.\n       * This value allows the language to be set to a desired language regardless of the browser default.\n       *\n       * For a list of language codes supported see https://developers.google.com/maps/faq#languagesupport\n       *\n       * *** the value should not be modified after the element is loaded ***\n       */\n      language: {\n        type: String,\n        value: '',\n      },\n      /**\n       * If true, the element does not load the drawing, geometry or visualization libraries, slightly\n       * reducing overall payload size.\n       *\n       * Important: Do not use this option if the page contains other elements that make usef\n       * of the Google Maps Javascript API (e.g. google-map).  This can cause the maps API to be loaded\n       * more than once generating errors.\n       *\n       * Do not change this value after the element is loaded\n       *\n       */\n      minimizeApi: {\n        type: Boolean,\n        value: false,\n      },\n      /**\n       * An object representing the initial or returned value of the control.\n       * ```\n       * Properties:\n       *   search:  string - the search string\n       *   place_id:  string - the google maps place_id\n       *   latLng:  object {lat: number, lng: number} - latitude/Longitude\n       *```\n       */\n      valueObject: {\n        type: Object,\n        notify: true,\n      },\n      /** @private */\n      _value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.place = {};\n    this.latLng = {\n      lat: 0,\n      lng: 0,\n    };\n    this.validationMessage = 'Invalid - please select a place';\n    this.apiLoaded = false;\n    this.searchCountryCode = 'test';\n    this.searchBounds = {};\n    this.searchBoundsStrict = false;\n    this.searchType = 'test';\n    this.icon = 'place';\n  }\n\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    changedProperties.forEach((oldValue, propName) => {\n      switch (propName) {\n        case '_value':\n          this._svalChanged(this._value);\n          break;\n        case 'valueObject':\n          this._valueChanged(this.valueObject, oldValue);\n          break;\n        case 'searchCountryCode':\n        case 'searchBounds':\n        case 'searchBoundsStrict':\n        case 'searchType':\n        case 'apiLoaded':\n          this._searchBiasChanged(\n            this.searchCountryCode,\n            this.searchBounds,\n            this.searchBoundsStrict,\n            this.searchType,\n          );\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  async firstUpdated() {\n    super.firstUpdated();\n    const gmaps = document.createElement('google-maps-api');\n    gmaps.apiKey = this.apiKey;\n    gmaps.version = '3.exp';\n    gmaps.id = 'gmaps-api';\n    gmaps.addEventListener(\n      'api-load',\n      (() => {\n        this._mapsApiLoaded();\n        // eslint-disable-next-line\n      }).bind(this),\n    );\n    this.shadowRoot.append(gmaps);\n  }\n\n  _mapsApiLoaded() {\n    if (!this._geocoder && !this._places) {\n      this._geocoder = new google.maps.Geocoder();\n      this._places = new google.maps.places.Autocomplete(\n        this.shadowRoot.getElementById('text-field'),\n        {},\n      );\n      google.maps.event.addListener(this._places, 'place_changed', this._onChangePlace.bind(this));\n      this.apiLoaded = true;\n      this._searchBiasChanged();\n      this.dispatchEvent(\n        new CustomEvent('api-loaded', {\n          detail: {\n            text: 'Google api is ready',\n          },\n        }),\n      );\n    }\n  }\n\n  /**\n   * observer for changes to search bias\n   */\n\n  _searchBiasChanged() {\n    const { searchCountryCode, searchBounds, searchType } = this;\n    if (this.apiLoaded) {\n      if (\n        searchBounds &&\n        // eslint-disable-next-line\n        searchBounds.hasOwnProperty('east') &&\n        // eslint-disable-next-line\n        searchBounds.hasOwnProperty('west') &&\n        // eslint-disable-next-line\n        searchBounds.hasOwnProperty('north') &&\n        // eslint-disable-next-line\n        searchBounds.hasOwnProperty('south')\n      ) {\n        this._places.setBounds(searchBounds);\n      } else {\n        this._places.setBounds();\n      }\n      if (searchCountryCode && searchCountryCode.length === 2) {\n        this._places.setComponentRestrictions({\n          country: searchCountryCode.toString(),\n        });\n      } else {\n        this._places.setComponentRestrictions();\n      }\n      if (\n        searchType &&\n        ['address', 'geocode', 'establishment', '(regions)', '(cities)'].includes(searchType)\n      ) {\n        this._places.setTypes([searchType.toString()]);\n      } else {\n        this._places.setTypes([]);\n      }\n    }\n  }\n\n  _valueChanged(newValue, oldValue) {\n    // update the search term and the invalid flag if the value is being set for the first time,\n    // or if the value has changed and is not the same as the search term\n    if (!oldValue || newValue.search !== oldValue.search || newValue.search !== this._value) {\n      // this._value = newValue && newValue.search ? newValue.search : \"\";\n      this._invalid =\n        !newValue ||\n        !(newValue.place_id && newValue.latLng && newValue.latLng.lat && newValue.latLng.lng);\n      if (!this.hideError) {\n        this._invalid = this.required\n          ? this._invalid\n          : this._invalid && newValue && newValue.search;\n      }\n    }\n  }\n\n  _svalChanged(newValue) {\n    // reset the invalid property if the user has typed in the input field\n\n    // if the newValue matches the selected place, which could happen if\n    // the user types after selecting a place, then deletes the typing\n    if (newValue && this.place && this.place.search && newValue === this.place.search) {\n      this.valueObject = {\n        place_id: this.place.place_id,\n        search: newValue,\n        latLng: {\n          lat: this.place.latLng.lat,\n          lng: this.place.latLng.lng,\n        },\n      };\n      this._invalid = false;\n      this._invalid = false;\n      return;\n    }\n    // if blank and not a required input\n    if (!newValue && !this.required) {\n      this.valueObject = {\n        place_id: '',\n        search: '',\n        latLng: {\n          lat: 0,\n          lng: 0,\n        },\n      };\n      this._place = {};\n      this._invalid = true;\n      if (!this.hideError) {\n        this._invalid = false;\n      }\n      return;\n    }\n    // if the new _value matches the value.search, which could happen if\n    // the value is changed externally (possibly through data binding) which\n    // causes _value to be changed triggering this function _svalChanged()\n    if (\n      newValue &&\n      this.valueObject &&\n      this.valueObject.search &&\n      newValue === this.valueObject.search\n    ) {\n      // nothing has really changed, just return\n      return;\n    }\n    // if the existing value is blank, and the new value is not\n    if ((!this.valueObject || !this.valueObject.search) && newValue) {\n      this.valueObject = {\n        place_id: '',\n        search: newValue,\n        latLng: {\n          lat: 0,\n          lng: 0,\n        },\n      };\n      this._place = {};\n      this._invalid = true;\n      if (!this.hideError) {\n        this._invalid = true;\n      }\n      return;\n    }\n    // otherwise, the value is invalid\n    this.valueObject = {\n      place_id: '',\n      search: newValue,\n      latLng: {\n        lat: 0,\n        lng: 0,\n      },\n    };\n    this._place = {};\n    this._invalid = true;\n    if (!this.hideError) {\n      this._invalid = true;\n    }\n  }\n\n  _clearLocation() {\n    this._value = '';\n  }\n\n  /**\n   * Geocodes an address\n   * @param  {string} address address to be geocoded\n   * @param  {object} options Optional - Geocoder Request options\n   * @return {Promise<place>}         A promise for a place object or a status on failure\n   */\n  geocode(address, options) {\n    return new Promise((resolve, reject) => {\n      if (!this._geocoder) {\n        reject(new Error('Geocoder not ready.'));\n      } else {\n        const opts = options || {};\n        opts.address = address || '';\n        this._geocoder.geocode(opts, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK && results && results[0]) {\n            const p = this._extractPlaceInfo(results[0], opts.address);\n            resolve(p);\n          } else {\n            reject(status);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Reverse Geocodes a latLng\n   * @param  {object} latlng latitude/Longitude {lat: , lng: } to be reverse geocoded\n   * @param  {object} options Optional - Geocoder Request options\n   * @return {Promise<place>}         A promise for a place object or a status on failure\n   */\n  reverseGeocode(latlng, options) {\n    return new Promise((resolve, reject) => {\n      if (!this._geocoder) {\n        reject(new Error('Geocoder not ready.'));\n      } else {\n        const opts = options || {};\n        if (latlng) {\n          opts.location = latlng;\n        }\n        this._geocoder.geocode(opts, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK && results && results[0]) {\n            const p = this._extractPlaceInfo(results[0], '');\n            resolve(p);\n          } else {\n            reject(status);\n          }\n        });\n      }\n    });\n  }\n\n  _onChangePlace() {\n    const pl = this._places.getPlace();\n    if (pl.geometry) {\n      const p = this._extractPlaceInfo(pl, this.shadowRoot.getElementById('text-field').value);\n      this._place = p;\n      this._invalid = false;\n      this._invalid = false;\n      this.latLng = {\n        lat: p.latLng.lat,\n        lng: p.latLng.lng,\n      };\n      this._value = this.shadowRoot.getElementById('text-field').value;\n      this.valueObject = {\n        search: this.shadowRoot.getElementById('text-field').value,\n        ...p,\n      };\n    }\n  }\n\n  /**\n   * extracts and simplifies a google place result\n   * @param  PlaceResult pl google place result\n   * @return place\n   */\n\n  // eslint-disable-next-line\n  _extractPlaceInfo(pl, searchTerm) {\n    const p = {\n      place_id: pl.place_id,\n      formatted_address: pl.formatted_address,\n      search: searchTerm || pl.formatted_address,\n      latLng: {\n        lat: pl.geometry.location.lat(),\n        lng: pl.geometry.location.lng(),\n      },\n      basic: {\n        name: pl.name || '',\n        address: '',\n        city: '',\n        state: '',\n        stateCode: '',\n        postalCode: '',\n        country: '',\n        countryCode: '',\n        phone: pl.formatted_phone_number || '',\n      },\n      placeDetails: {\n        address_components: [],\n        icon: pl.icon,\n        international_phone_number: pl.international_phone_number || '',\n        permanently_closed: pl.permanently_closed || false,\n        types: pl.types ? JSON.parse(JSON.stringify(pl.types)) : [],\n        website: pl.website || '',\n        url: pl.url || '',\n        utc_offset_minutes: pl.utc_offset_minutes,\n      },\n    };\n    // extract address components\n    const address = {\n      street_number: '',\n      route: '',\n    };\n    for (let i = 0; i < pl.address_components.length; i + 1) {\n      p.placeDetails.address_components.push(JSON.parse(JSON.stringify(pl.address_components[i])));\n      switch (pl.address_components[i].types[0]) {\n        case 'locality':\n          p.basic.city = pl.address_components[i].long_name;\n          break;\n        case 'administrative_area_level_1':\n          p.basic.stateCode = pl.address_components[i].short_name;\n          p.basic.state = pl.address_components[i].long_name;\n          break;\n        case 'country':\n          p.basic.country = pl.address_components[i].long_name;\n          p.basic.countryCode = pl.address_components[i].short_name;\n          break;\n        case 'postal_code':\n          p.basic.postalCode = pl.address_components[i].long_name;\n          break;\n        case 'street_number':\n          address.street_number = pl.address_components[i].short_name;\n          p.basic.address = `${address.street_number} ${address.route}`;\n          p.basic.streetNumber = address.street_number;\n          break;\n        case 'route':\n          address.route = pl.address_components[i].long_name;\n          p.basic.address = `${address.street_number} ${address.route}`;\n          p.basic.route = address.route;\n          break;\n        default:\n          address[pl.address_components[i].types[0]] = pl.address_components[i].long_name;\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Updates the current place, value and latLng with the place provided\n   * @param  IpipPlace newPlace the new place\n   */\n  putPlace(newPlace) {\n    if (newPlace && newPlace.place_id && newPlace.latLng) {\n      this._place = JSON.parse(JSON.stringify(newPlace));\n      this.latLng = {\n        lat: newPlace.latLng.lat,\n        lng: newPlace.latLng.lng,\n      };\n      this.valueObject = {\n        place_id: newPlace.place_id,\n        search: newPlace.search,\n        latLng: {\n          lat: newPlace.latLng.lat,\n          lng: newPlace.latLng.lng,\n        },\n      };\n      this._value = newPlace.search;\n    }\n  }\n}"]}